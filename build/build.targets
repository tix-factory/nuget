<Project>
	<!-- Build properties -->
	<PropertyGroup>
		<LangVersion>7.1</LangVersion>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
	</PropertyGroup>

	<!-- NuGet properties -->
	<PropertyGroup>
		<GeneratePackageOnBuild Condition="'$(IsPackable)' != 'false'">true</GeneratePackageOnBuild>
		<RepositoryUrl>https://github.com/tix-factory/nuget</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageVersion Condition="'$(PackageVersion)' == ''">2.0.$(BUILD_NUMBER)</PackageVersion>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
		<SERVER_BUILD>false</SERVER_BUILD>
	</PropertyGroup>

	<ItemGroup>
		<None Include="$(RootPath)$(PackageLicenseFile)" Pack="true" PackagePath="$(PackageLicenseFile)">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<!-- Build Agent Properties -->
	<PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
		<SERVER_BUILD>true</SERVER_BUILD>
		<CHECKOUT_DIRECTORY>$(GITHUB_WORKSPACE)</CHECKOUT_DIRECTORY>
	</PropertyGroup>
	<PropertyGroup Condition="'$(SERVER_BUILD)' != 'true'">
		<LocalNuGetRepository Condition="'$(LocalNuGetRepository)' == ''">E:/LocalNuGetRepo</LocalNuGetRepository>
	</PropertyGroup>
	<PropertyGroup Condition="'$(SERVER_BUILD)' == 'true'">
		<LocalNuGetRepository>$(CHECKOUT_DIRECTORY)/LocalNuGetRepo</LocalNuGetRepository>
		<PublishNuGetRepository>$(CHECKOUT_DIRECTORY)/PublishNuGetRepo</PublishNuGetRepository>
	</PropertyGroup>
	<PropertyGroup>
		<RestoreSources>
			$(LocalNuGetRepository);
			https://api.nuget.org/v3/index.json;
		</RestoreSources>
	</PropertyGroup>

	<!-- Copy NuGet package to local repository -->
	<Target Name="CreateLocalNuGetRpository"
		BeforeTargets="Restore;CollectPackageReferences">
		<MakeDir Directories="$(LocalNuGetRepository)" Condition="!Exists('$(LocalNuGetRepository)')" />
		<MakeDir Directories="$(PublishNuGetRepository)" Condition="'$(SERVER_BUILD)' == 'true' AND !Exists('$(PublishNuGetRepository)')" />
	</Target>

	<!-- Development -->
	<Target Name="CopyToLocalRepo"
	        AfterTargets="Pack"
			Condition="'$(SERVER_BUILD)|$(GeneratePackageOnBuild)' == 'false|true'">
		<PropertyGroup>
			<LocalCacheFolder>"$(UserProfile)\.nuget\packages\$(PackageId)\$(PackageVersion)"</LocalCacheFolder>
			<NuGetFile>$(PackageOutputPath)$(PackageId).$(PackageVersion).nupkg</NuGetFile>
		</PropertyGroup>
		<Message Text="Copying $(NuGetFile) to $(LocalNuGetRepository)..." Importance="high"/>
		<Copy SourceFiles="$(NuGetFile)" DestinationFolder="$(LocalNuGetRepository)" SkipUnchangedFiles="false" />
		<Exec Command="rd /s /q $(LocalCacheFolder)"/>
	</Target>

	<!-- Build Agent -->
	<Target Name="CopyToLocalRepo_Server"
	        AfterTargets="Pack"
			Condition="'$(SERVER_BUILD)|$(GeneratePackageOnBuild)' == 'true|true'">
		<PropertyGroup>
			<NuGetFile>$(PackageOutputPath)$(PackageId).$(PackageVersion).nupkg</NuGetFile>
		</PropertyGroup>
		<Message Text="Copying $(NuGetFile) to $(LocalNuGetRepository) and $(PublishNuGetRepository)..." Importance="high"/>
		<Copy SourceFiles="$(NuGetFile)" DestinationFolder="$(LocalNuGetRepository)" SkipUnchangedFiles="false" />
		<Copy SourceFiles="$(NuGetFile)" DestinationFolder="$(PublishNuGetRepository)" SkipUnchangedFiles="false" />
	</Target>

	<Target Name="CopyToPublishFolder"
			AfterTargets="Publish">
		<ItemGroup>
			<_CopyItems Include="$(OutputPath)publish\**\*.*" />
		</ItemGroup>
		<Message Text="Copying publish directory...%0a%09Source: $(OutputPath)publish%0a%09Destination: $(RootPath)build/publish/$(AssemblyName)" Importance="high"/>
		<Copy SourceFiles="@(_CopyItems)" DestinationFolder="$(RootPath)build/publish/$(AssemblyName)/%(RecursiveDir)" />
	</Target>
</Project>